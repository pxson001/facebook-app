package com.facebook.malware.scanner;

import com.facebook.conditionalworker.ConditionalWorkerInfo;
import com.facebook.conditionalworker.ConditionalWorkerInfo.Trigger;
import com.facebook.conditionalworker.RequiredStates;
import com.facebook.conditionalworker.RequiredStates.Builder;
import com.facebook.conditionalworker.States.AppState;
import com.facebook.conditionalworker.States.BatteryState;
import com.facebook.conditionalworker.States.LoginState;
import com.facebook.conditionalworker.States.NetworkState;
import javax.inject.Inject;
import javax.inject.Provider;

/* compiled from: invalid metadata (country calling code was mapped to the non-geo entity as well as specific region(s)) */
public class MalwareScannerConditionalWorkerInfo implements ConditionalWorkerInfo {
    private final Provider<MalwareScanner> f10198b;
    private final Provider<Boolean> f10199c;

    @Inject
    public MalwareScannerConditionalWorkerInfo(Provider<MalwareScanner> provider, Provider<Boolean> provider2) {
        this.f10198b = provider;
        this.f10199c = provider2;
    }

    public final boolean mo788a() {
        return ((Boolean) this.f10199c.get()).booleanValue();
    }

    public final Trigger mo789b() {
        return Trigger.STATE_CHANGE;
    }

    public final Provider<MalwareScanner> mo790c() {
        return this.f10198b;
    }

    public final RequiredStates mo791d() {
        return new Builder().m10803a(AppState.BACKGROUND).m10806a(NetworkState.CONNECTED).m10805a(LoginState.LOGGED_IN).m10804a(BatteryState.NOT_LOW).m10807a();
    }

    public final long mo792e() {
        return 604800000;
    }
}
