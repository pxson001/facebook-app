package com.facebook.malware.permissions;

import com.facebook.conditionalworker.ConditionalWorkerInfo;
import com.facebook.conditionalworker.ConditionalWorkerInfo.Trigger;
import com.facebook.conditionalworker.RequiredStates;
import com.facebook.conditionalworker.RequiredStates.Builder;
import com.facebook.conditionalworker.States.AppState;
import com.facebook.conditionalworker.States.BatteryState;
import com.facebook.conditionalworker.States.NetworkState;
import com.facebook.prefs.shared.FbSharedPreferences;
import javax.inject.Inject;
import javax.inject.Provider;

/* compiled from: invalid_selected_composer_privacy_option_received */
public class MalwareDetectorConditionalWorkerInfo implements ConditionalWorkerInfo {
    private final Provider<MalwareDetector> f10196b;
    private final FbSharedPreferences f10197c;

    @Inject
    public MalwareDetectorConditionalWorkerInfo(Provider<MalwareDetector> provider, FbSharedPreferences fbSharedPreferences) {
        this.f10196b = provider;
        this.f10197c = fbSharedPreferences;
    }

    public final boolean mo788a() {
        return !this.f10197c.a(MalwareDetector.f10311a, false);
    }

    public final Trigger mo789b() {
        return Trigger.STATE_CHANGE;
    }

    public final Provider<MalwareDetector> mo790c() {
        return this.f10196b;
    }

    public final RequiredStates mo791d() {
        return new Builder().m10803a(AppState.BACKGROUND).m10806a(NetworkState.CONNECTED).m10804a(BatteryState.NOT_LOW).m10807a();
    }

    public final long mo792e() {
        return 604800000;
    }
}
